/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        r_pinky_dance: r_pinky_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "R_PINKY_DANCE";
            #binding-cells = <0>;
            bindings = <&kp PERIOD>, <&kp QUESTION>, <&kp EXCLAMATION>;
        };

        rpinkydancemod: rpinkydancemod {
            compatible = "zmk,behavior-mod-morph";
            label = "RPINKYDANCEMOD";
            bindings = <&r_pinky_dance>, <&kp COMMA>;

            #binding-cells = <0>;
            mods = <(MOD_LCTL)>;
        };

        colon_dance: colon_dance {
            compatible = "zmk,behavior-tap-dance";
            label = "COLON_DANCE";
            #binding-cells = <0>;
            bindings = <&kp COLON>, <&kp SEMICOLON>;
        };

        mod_keys: mod_keys {
            compatible = "zmk,behavior-tap-dance";
            label = "MOD_KEYS";
            #binding-cells = <0>;
            bindings = <&sk LEFT_ALT>, <&kp LEFT_CONTROL>;
        };

        right_mod_cmd: right_mod_cmd {
            compatible = "zmk,behavior-hold-tap";
            label = "RIGHT_MOD_CMD";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <17 4 14 24 32 31 23 13 3 2 12 22 21 11 1 0 10 20 30 33 34>;
        };

        left_mod_command: left_mod_command {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_MOD_COMMAND";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <5 33 34 25 15 16 26 6 7 17 27 28 18 8 9 19 29 35>;
        };

        right_thumb_tapdance: right_thumb_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "RIGHT_THUMB_TAPDANCE";
            #binding-cells = <0>;
            bindings = <&lt 2 SPACE>, <&mo 4>;
        };

        escape: escape {
            compatible = "zmk,behavior-hold-tap";
            label = "ESCAPE";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
        };

        enter: enter {
            compatible = "zmk,behavior-hold-tap";
            label = "ENTER";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "balanced";
        };

        quote: quote {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOTE";
            #binding-cells = <0>;
            bindings = <&kp SQT>, <&kp GRAVE>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bluetooth {
            bindings = <&mo 5>;
            key-positions = <30 35>;
            layers = <0>;
        };

        media {
            bindings = <&mo 3>;
            key-positions = <32 33>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
  &kp Q           &kp W  &kp E      &kp R                             &kp T                                  &kp Y           &kp U                           &kp I             &kp O  &kp BACKSPACE
  &kp A           &kp S  &kp D      &left_mod_command LEFT_COMMAND F  &kp G                                  &kp H           &right_mod_cmd RIGHT_COMMAND J  &kp K             &kp L  &colon_dance
  &sk LEFT_SHIFT  &kp Z  &kp X      &kp C                             &kp V                                  &kp B           &kp N                           &kp M             &kp P  &rpinkydancemod
                         &mod_keys  &lt 1 TAB                         &escape LA(LC(LEFT_COMMAND)) ESCAPE    &enter 2 SPACE  &lt 3 ENTER                     &sk LEFT_CONTROL
            >;
        };

        nav_vim {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp ESC  &kp O  &kp W    &kp R  &kp Y     &kp LEFT_PARENTHESIS  &kp B           &kp E         &kp LC(U)  &kp RIGHT_PARENTHESIS
  &kp A    &kp S  &kp D    &kp F  &kp I     &kp LEFT_ARROW        &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT  &kp PERCENT
  &mo 2    &kp Z  &kp P    &kp C  &kp V     &kp LEFT_BRACE        &kp CARET       &kp DOLLAR    &kp LC(D)  &kp RIGHT_BRACE
                  &kp ESC  &kp U  &trans    &kp LCTRL             &kp LSHFT       &kp G
            >;
        };

        num_sym {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
  &kp BACKSLASH   &kp N1  &kp N2        &kp N3   &kp PLUS     &kp UNDERSCORE    &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp TILDE  &kp BACKSPACE
  &kp ASTRK       &kp N4  &kp N5        &kp N6   &kp MINUS    &kp EQUAL         &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &quote     &kp SLASH
  &sk LEFT_SHIFT  &kp N7  &kp N8        &kp N9   &kp POUND    &kp GREATER_THAN  &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PIPE   &kp AMPERSAND
                          &kp NUMBER_0  &kp TAB  &kp SPACE    &trans            &kp COLON             &kp LESS_THAN
            >;
        };

        Media {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &kp K_MUTE      &kp C_VOLUME_DOWN  &kp C_VOL_UP  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &kp C_PREVIOUS  &kp C_PP           &kp C_NEXT    &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &kp COMMA       &kp ENTER          &kp A         &kp C_AC_NEXT_KEYBOARD_LAYOUT_SELECT
                  &trans  &trans  &trans    &trans  &trans          &trans
            >;
        };

        layer_7 {
            bindings = <
  &kp LS(TILDE)  &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &trans           &trans  &trans  &trans  &trans  &trans
  &trans         &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &trans           &trans  &trans  &trans  &trans  &trans
  &trans         &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(TILDE)    &trans  &trans  &trans  &trans  &trans
                               &kp LS(RPAR)   &trans         &trans           &trans  &trans  &trans
            >;
        };

        bluetooth {
            bindings = <
  &trans       &bt BT_SEL 0  &bt BT_SEL 2    &bt BT_SEL 2  &trans    &trans      &trans      &trans  &trans  &bt BT_CLR
  &trans       &bt BT_SEL 3  &bt BT_SEL 4    &trans        &trans    &bt BT_PRV  &bt BT_NXT  &trans  &trans  &trans
  &bootloader  &bt BT_CLR    &bt BT_CLR_ALL  &trans        &kp X     &trans      &trans      &trans  &trans  &bootloader
                             &sys_reset      &trans        &trans    &trans      &trans      &trans
            >;
        };

        lyr_toggle_sel {
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans  &trans  &tog 0  &trans    &trans  &tog 7  &trans  &trans  &trans
  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        win_default_lyr {
            bindings = <
  &kp Q      &kp W             &kp E         &kp R             &kp T      &kp Y      &kp U              &kp I          &kp O              &kp P
  &kp A      &kp LEFT_CONTROL  &sk LEFT_ALT  &sk LEFT_COMMAND  &kp G      &kp H      &sk RIGHT_COMMAND  &sk RIGHT_ALT  &sk RIGHT_CONTROL  &colon_dance
  &kp LSHFT  &kp Z             &kp X         &kp C             &kp V      &kp B      &kp N              &kp M          &r_pinky_dance     &kp RSHFT
                               &trans        &kp TAB           &kp ESC    &kp ENTER  &kp SPACE          &kp BSPC
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
